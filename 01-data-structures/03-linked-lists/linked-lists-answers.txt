What is Spatial Locality and why does it benefit performance?

Spatial locality is the use of storing related data elements in locations that are close in proximity with to one another. 
By structuring data in this fashion, when a processor needs to retrieve data from outside the cache memory â€“ a process that takes longer than retrieving from the cache memory, 
the likelihood of the remaining related data elements will also be included in the range of data locations retrieved and stored in the cache memory.
Because of this, after initializing the the new range of data has been stored in the cache, it will result in a fewer amount of cache misses,
limiting the number of times the processer needs to access the RAM memory to fetch the instruction.

Compare the performance of an Array to a Linked List using the Benchmark module:

    Create Array:  0.000000   0.000000   0.000000 (  0.002871)
    Append List:   2.270000   0.010000   2.280000 (  2.271397)
    Access Array:  0.000000   0.000000   0.000000 (  0.000004)
    Access List:   0.000000   0.000000   0.000000 (  0.000269)
    Remove Array:  0.000000   0.000000   0.000000 (  0.000008)
    Remove List:   0.000000   0.000000   0.000000 (  0.000616)
    
  - Compare the time it takes to create a 10,000 item Array to appending 10,000 items to a Linked List.

    >>  Create Array:  0.000000   0.000000   0.000000 (  0.002871)
    >>  Append List:   2.270000   0.010000   2.280000 (  2.271397).
    
  - Compare the time it takes to access the 5000th element of the Array and the 5000th Node in the Linked List.
  
    >>  Access Array:  0.000000   0.000000   0.000000 (  0.000004)
    >>  Access List:   0.000000   0.000000   0.000000 (  0.000269)
    
  - Compare the time it takes to remove the 5000th element from the Array to removing the 5000th Node in the Linked List.
  
    >>  Remove Array:  0.000000   0.000000   0.000000 (  0.000008)
    >>  Remove List:   0.000000   0.000000   0.000000 (  0.000616)
